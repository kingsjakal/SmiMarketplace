@using Smi.Core.Domain.Directory
@using Smi.Services
@model CurrencyModel

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CurrencyDetailsTop, additionalData = Model })
            <div class="panel panel-default">
                <div class="panel-body">
                    @(Html.LocalizedEditor<CurrencyModel, CurrencyLocalizedModel>("currency-info-localized",
                          @<div>
                              <div class="form-group">
                                  <div class="col-md-3">
                                      <Smi-label asp-for="@Model.Locales[item].Name" />
                                  </div>
                                  <div class="col-md-9">
                                      <Smi-editor asp-for="@Model.Locales[item].Name" />
                                      <span asp-validation-for="@Model.Locales[item].Name"></span>
                                  </div>
                              </div>
                               <input type="hidden" asp-for="@Model.Locales[item].LanguageId" />
                          </div>
                          ,
                        @<div>
                              <div class="form-group">
                                  <div class="col-md-3">
                                      <Smi-label asp-for="Name" />
                                  </div>
                                  <div class="col-md-9">
                                      <Smi-editor asp-for="Name" asp-required="true" />
                                      <span asp-validation-for="Name"></span>
                                  </div>
                              </div>
                          </div>
                          ))
                    <div class="form-group">
                        <div class="col-md-3">
                            <Smi-label asp-for="CurrencyCode"/>
                        </div>
                        <div class="col-md-9">
                            <Smi-editor asp-for="CurrencyCode" asp-required="true" />
                            <span asp-validation-for="CurrencyCode"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <Smi-label asp-for="Rate"/>
                        </div>
                        <div class="col-md-9">
                            <Smi-editor asp-for="Rate"/>
                            <span asp-validation-for="Rate"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <Smi-label asp-for="DisplayLocale"/>
                        </div>
                        <div class="col-md-9">
                            @{
                                var cultures = System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes.SpecificCultures)
                                    .OrderBy(x => x.EnglishName)
                                    .Select(x => new SelectListItem
                                    {
                                        Value = x.IetfLanguageTag,
                                        Text = $"{x.EnglishName}. {x.IetfLanguageTag}"
                                    })
                                    .ToList();
                                cultures.Insert(0, new SelectListItem
                                {
                                    Value = "",
                                    Text = @T("Admin.Configuration.Currencies.Fields.DisplayLocale.Select").Text
                                });
                            }
                            <Smi-select asp-for="DisplayLocale" asp-items="@cultures"/>
                            <span asp-validation-for="DisplayLocale"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <Smi-label asp-for="CustomFormatting"/>
                        </div>
                        <div class="col-md-9">
                            <Smi-editor asp-for="CustomFormatting"/>
                            <span asp-validation-for="CustomFormatting"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <Smi-label asp-for="SelectedStoreIds"/>
                        </div>
                        <div class="col-md-9">
                            <div class="row">
                                <div class="col-md-4">
                                    <Smi-select asp-for="SelectedStoreIds" asp-items="Model.AvailableStores" asp-multiple="true"/>
                                    <script>
                                        $(document).ready(function() {
                                            var storesIdsInput = $('#@Html.IdFor(model => model.SelectedStoreIds)')
                                                .data("kendoMultiSelect");
                                            storesIdsInput.setOptions({
                                                autoClose: false,
                                                filter: "contains"
                                            });

                                            @if (Model.AvailableStores.Count == 0)
                                            {
                                                <text>
                                                    storesIdsInput.setOptions({
                                                        enable: false,
                                                        placeholder: 'No stores available'
                                                    });
                                                    storesIdsInput._placeholder();
                                                    storesIdsInput._enable();
                                                </text>
                                            }
                                        });
                                    </script>
                                </div>
                                <div class="col-md-8">
                                    @await Component.InvokeAsync("MultistoreDisabledWarning")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <Smi-label asp-for="RoundingTypeId"/>
                        </div>
                        <div class="col-md-9">
                            <Smi-select asp-for="RoundingTypeId" asp-items="@((RoundingType) Model.RoundingTypeId).ToSelectList()"/>
                            <span asp-validation-for="RoundingTypeId"></span>
                        </div>
                    </div>                    
                    <div class="form-group">
                        <div class="col-md-3">
                            <Smi-label asp-for="Published"/>
                        </div>
                        <div class="col-md-9">
                            <Smi-editor asp-for="Published"/>
                            <span asp-validation-for="Published"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <Smi-label asp-for="DisplayOrder"/>
                        </div>
                        <div class="col-md-9">
                            <Smi-editor asp-for="DisplayOrder"/>
                            <span asp-validation-for="DisplayOrder"></span>
                        </div>
                    </div>
                    @if (Model.Id > 0)
                    {
                        <div class="form-group">
                            <div class="col-md-3">
                                <Smi-label asp-for="CreatedOn"/>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.CreatedOn</div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CurrencyDetailsBottom, additionalData = Model })
        </div>
    </div>
</div>