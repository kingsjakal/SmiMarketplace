@model VendorModel

@{
    const string hideInfoBlockAttributeName = "VendorPage.HideInfoBlock";
    var hideInfoBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideInfoBlockAttributeName);

    const string hideDisplayBlockAttributeName = "VendorPage.HideDisplayBlock";
    var hideDisplayBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideDisplayBlockAttributeName, defaultValue: true);

    const string hideSeoBlockAttributeName = "VendorPage.HideSEOBlock";
    var hideSeoBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSeoBlockAttributeName, defaultValue: true);

    const string hideVendorNotesBlockAttributeName = "VendorPage.HideNotesBlock";
    var hideVendorNotesBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideVendorNotesBlockAttributeName, defaultValue: true);
}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-12 clearfix">
                <div class="pull-left">
                    @await Component.InvokeAsync("SettingMode", new { modeName = "vendor-advanced-mode" })
                </div>
            </div>
        </div>

        <Smi-panels id="vendor-panels">
            <Smi-panel asp-name="vendor-info" asp-icon="fa fa-info" asp-title="@T("Admin.Vendors.Info")" asp-hide-block-attribute-name="@hideInfoBlockAttributeName" asp-hide="@hideInfoBlock" asp-advanced="false">@await Html.PartialAsync("_CreateOrUpdate.Info", Model)</Smi-panel>
            <Smi-panel asp-name="vendor-display" asp-icon="fa fa-television" asp-title="@T("Admin.Vendors.Display")" asp-hide-block-attribute-name="@hideDisplayBlockAttributeName" asp-hide="@hideDisplayBlock" asp-advanced="true">@await Html.PartialAsync("_CreateOrUpdate.Display", Model)</Smi-panel>
            <Smi-panel asp-name="vendor-seo" asp-icon="fa fa-search-plus" asp-title="@T("Admin.Common.SEO")" asp-hide-block-attribute-name="@hideSeoBlockAttributeName" asp-hide="@hideSeoBlock" asp-advanced="true">@await Html.PartialAsync("_CreateOrUpdate.Seo", Model)</Smi-panel>
            
            @if (Model.Id > 0)
            {
                <Smi-panel asp-name="vendor-products" asp-icon="fa fa-th-list" asp-title="@T("Admin.Vendors.VendorNotes")" asp-hide-block-attribute-name="@hideVendorNotesBlockAttributeName" asp-hide="@hideVendorNotesBlock" asp-advanced="true">@await Html.PartialAsync("_CreateOrUpdate.Notes", Model)</Smi-panel>
            }
                    
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.VendorDetailsBlock, additionalData = Model })
        </Smi-panels>
    </div>
</div>