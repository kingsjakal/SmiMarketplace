@using Smi.Core.Domain
@using StackExchange.Profiling
@using Smi.Core.Domain.Common
@using Smi.Core.Domain.Seo
@using Smi.Services.Events
@using Smi.Services.Security
@using Smi.Web.Framework.Events
@using Smi.Core
@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject IWorkContext workContext
@inject SeoSettings seoSettings
@inject StoreInformationSettings storeInformationSettings
@inject Smi.Services.Localization.ILanguageService languageService
@{
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");
    //when jQuery migrate script logging is active you will see the log in the browser console
    if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-migrate/jquery-migrate-3.1.0.js");
    }
    else
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-migrate/jquery-migrate-3.1.0.min.js");
    }
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-ui/jquery-ui-1.12.1.custom/jquery-ui.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-validate/jquery.validate.unobtrusive-v3.2.11/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery-validate/jquery.validate-v1.19.1/jquery.validate.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/jquery/jquery-3.4.1.min.js");
    
    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }
    var displayMiniProfiler = storeInformationSettings.DisplayMiniProfilerInPublicStore
        && (!storeInformationSettings.DisplayMiniProfilerForAdminOnly || permissionService.Authorize(StandardPermissionProvider.AccessAdminPanel));
    //event
    eventPublisher.Publish(new PageRenderingEvent(this.Html));
}
<!DOCTYPE html>
<html lang="@languageService.GetTwoLetterIsoLanguageName(workContext.WorkingLanguage)" @(this.ShouldUseRtlTheme() ? Html.Raw(" dir=\"rtl\"") : null) @Html.SmiPageCssClasses()>
<head>
    <title>@Html.SmiTitle()</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@(Html.SmiMetaDescription())" />
    <meta name="keywords" content="@(Html.SmiMetaKeywords())" />
    <meta name="generator" content="SmiMarketplace" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    @Html.SmiHeadCustom()
    @*This is used so that themes can inject content into the header*@
    @await Html.PartialAsync("Head")
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeadHtmlTag })
    @Html.SmiCssFiles(ResourceLocation.Head)
    @Html.SmiScripts(ResourceLocation.Head)
    @Html.SmiCanonicalUrls()
    @await Component.InvokeAsync("NewsRssHeaderLink")
    @await Component.InvokeAsync("BlogRssHeaderLink")
    @*Insert favicon and app icons head code*@
    @await Component.InvokeAsync("Favicon")
    @if (displayMiniProfiler)
    {
        <mini-profiler />
    }
    @Html.SmiInlineScripts(ResourceLocation.Head)
    <!--Powered by SmiMarketplace - https://www.SmiMarketplace.com-->
</head>
<body>
    @RenderBody()
    @Html.SmiCssFiles(ResourceLocation.Footer)
    @Html.SmiScripts(ResourceLocation.Footer)
    @Html.SmiInlineScripts(ResourceLocation.Footer)
</body>
</html>